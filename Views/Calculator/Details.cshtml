@model IEnumerable<HourCalcMVC.Models.DailyHour>;

@{
    ViewData["Title"] = "Work Hour Calculator";
    var id = ViewBag.Id;
    DateTime TotalTime = new DateTime();

    var months = new Dictionary<int, string>
    {
                {1, "Styczeń" },
                {2, "Luty" },
                {3, "Marzec" },
                {4, "Kwiecień" },
                {5, "Maj" },
                {6, "Czerwiec" },
                {7, "Lipiec" },
                {8, "Sierpień" },
                {9, "Wrzesień" },
                {10, "Październik" },
                {11, "Listopad" },
                {12, "Grudzień" },
    };
    var mon = months.FirstOrDefault(m => m.Key == id).Value;
    @foreach (var item in Model.Where(m => m.Date.Month == id))
    {
        TotalTime = TotalTime.Add(TimeOnly.FromDateTime(DateTime.Parse(item.Total)).ToTimeSpan());
    }
}

<div class="text-center">
    <h1 class="display-4">@mon</h1>
    //displaying clock not total worked hours FIXIT!!!(display hours and minutes in separeted int's)
    <h4>Total time @TotalTime.ToString("HH:mm")</h4>
</div>
@foreach (var item in Model.Where(m => m.Date.Month == id))
{
    <div class="rounded border border-dark p-2 m-2 bg-main">
        <p>Started at: @item.StartingHour.ToString("HH:mm")</p>
        <p>Ended at: @item.EndingHour.ToString("HH:mm")</p>
        <p>@item.Date.ToString("d")</p>
        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </div>
}
